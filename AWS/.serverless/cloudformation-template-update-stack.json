{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "An Amazon API Gateway REST API that integrates with an Amazon DynamoDB table (Serverless Framework).",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "DynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "Music",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "artist",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "Artist-Index",
            "KeySchema": [
              {
                "AttributeName": "artist",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "INCLUDE",
              "NonKeyAttributes": [
                "album"
              ]
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ]
      }
    },
    "APIGatewayRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "APIGatewayDynamoDBPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:Query"
                  ],
                  "Resource": {
                    "Fn::Sub": [
                      "${varTableArn}*",
                      {
                        "varTableArn": {
                          "Fn::GetAtt": [
                            "DynamoDBTable",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "Api": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "api-music",
        "ApiKeySourceType": "HEADER"
      }
    },
    "MusicResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "Api",
            "RootResourceId"
          ]
        },
        "PathPart": "music"
      }
    },
    "MusicMethodPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ResourceId": {
          "Ref": "MusicResource"
        },
        "HttpMethod": "POST",
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "Credentials": {
            "Fn::GetAtt": [
              "APIGatewayRole",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:dynamodb:action/PutItem"
          },
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestTemplates": {
            "application/json": "{\"TableName\":\"Music\",\"Item\":{\"id\":{\"S\":\"$context.requestId\"},\"artist\":{\"S\":\"$input.path('$.artist')\"},\"album\":{\"S\":\"$input.path('$.album')\"}}}"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseTemplates": {
                "application/json": "{}"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ]
      }
    },
    "MusicArtistResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ParentId": {
          "Ref": "MusicResource"
        },
        "PathPart": "{artist}"
      }
    },
    "MusicArtistMethodGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "ResourceId": {
          "Ref": "MusicArtistResource"
        },
        "HttpMethod": "GET",
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "RequestParameters": {
          "method.request.path.artist": true
        },
        "Integration": {
          "Type": "AWS",
          "Credentials": {
            "Fn::GetAtt": [
              "APIGatewayRole",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:dynamodb:action/Query"
          },
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": {
            "integration.request.path.artist": "method.request.path.artist"
          },
          "RequestTemplates": {
            "application/json": "{\"TableName\":\"Music\",\"IndexName\":\"Artist-Index\",\"KeyConditionExpression\":\"artist=:v1\",\"ExpressionAttributeValues\":{\":v1\":{\"S\":\"$util.urlDecode($input.params('artist'))\"}}}"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{\n\t\"music\": [\n\t\t#foreach($field in $inputRoot.Items) {\n\t\t\t\"id\": \"$field.id.S\",\n\t\t\t\"artist\": \"$field.artist.S\",\n\t\t\t\"album\": \"$field.album.S\"\n\t\t}#if($foreach.hasNext),#end\n\t\t#end\n\t]\n}"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ]
      }
    },
    "ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [
        "MusicArtistMethodGet"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "StageName": "v1"
      }
    },
    "ApiKey": {
      "Type": "AWS::ApiGateway::ApiKey",
      "DependsOn": [
        "ApiDeployment"
      ],
      "Properties": {
        "Enabled": true,
        "Name": "api-music-apikey",
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "Api"
            },
            "StageName": "v1"
          }
        ]
      }
    },
    "ApiUsagePlan": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "DependsOn": [
        "ApiDeployment"
      ],
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "Api"
            },
            "Stage": "v1"
          }
        ],
        "Throttle": {
          "RateLimit": 500,
          "BurstLimit": 1000
        },
        "UsagePlanName": "api-music-usage-plan",
        "Quota": {
          "Limit": 10000,
          "Period": "MONTH"
        }
      }
    },
    "ApiUsagePlanKey": {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "Properties": {
        "KeyType": "API_KEY",
        "KeyId": {
          "Ref": "ApiKey"
        },
        "UsagePlanId": {
          "Ref": "ApiUsagePlan"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-apigw-rest-api-dynamodb-sls-v1-ServerlessDeploymentBucketName"
      }
    },
    "ApiRootUrl": {
      "Description": "Root Url of the API",
      "Value": {
        "Fn::Sub": [
          "https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com/v1",
          {
            "ApiId": {
              "Ref": "Api"
            }
          }
        ]
      }
    }
  }
}